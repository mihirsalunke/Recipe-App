{"version":3,"sources":["recipes.js","Card.jsx","CardList.jsx","SearchBox.jsx","AddRecipe.jsx","NewRecipeForm.jsx","RecipeDetails.jsx","services.js","App.jsx","serviceWorker.js","index.js"],"names":["recipes","title","ingredients","instructions","image","module","exports","addRecipe","_ref","push","Card","showDetails","react_default","a","createElement","className","alt","src","onClick","CardList","map","recipe","i","src_Card","key","SearchBox","searchChange","type","placeholder","onChange","AddRecipe","openRecipeForm","NewRecipeForm","cancel","titleChange","ingredientsChange","instructionsChange","imageChange","submitRecipe","showerror","rows","cols","RecipeDetalis","showAllRecipes","postRecipe","fetch","method","headers","Headers","content-type","body","JSON","stringify","catch","err","Promise","reject","error","then","response","ok","json","statusText","fetchRecipes","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSearchChange","event","setState","searchfield","target","value","recipeFormPage","allRecipesPage","handleCancelClick","recipeStore","detailsPage","selectedRecipe","handleTitleChange","handleIngredientsChange","handleInstructionsChange","handleImageChange","handleSubmitRecipe","state","find","innerHTML","bind","assertThisInitialized","errorFlag","poll","_this2","setTimeout","_ref2","_this3","filteredRecipes","filter","toLowerCase","includes","src_SearchBox","src_AddRecipe","src_CardList","src_NewRecipeForm","showError","src_RecipeDetails","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yEAAA,IAAMA,EAAU,CACZ,CACIC,MAAO,sBACPC,YAAa,4XACbC,aAAc,m8BACdC,MAAO,uSAEX,CACIH,MAAO,eACPC,YAAa,yTACbC,aAAc,yhBACdC,MAAO,oGAEX,CACIH,MAAO,qBACPC,YAAa,wSACbC,aAAc,iuBACdC,MAAO,sKAEX,CACIH,MAAO,gBACPC,YAAa,kgBACbC,aAAc,wiCACdC,MAAO,0DAEX,CACIH,MAAO,gBACPC,YAAa,+PACbC,aAAc,0eACdC,MAAO,wEAEX,CACIH,MAAO,cACPC,YAAa,iXACbC,aAAc,2tCACdC,MAAO,wJAEX,CACIH,MAAO,SACPC,YAAa,0fACbC,aAAc,gqDACdC,MAAO,uEAQfC,EAAOC,QAAU,CAACN,UAASO,UAJ3B,SAAAC,GAAgE,IAA3CP,EAA2CO,EAA3CP,MAAOC,EAAoCM,EAApCN,YAAaC,EAAuBK,EAAvBL,aAAcC,EAASI,EAATJ,MACnDJ,EAAQS,KAAK,CAAER,QAAOC,cAAaC,eAAcC,kTC9BtCM,eAbF,SAAAF,GAAmC,IAAhCG,EAAgCH,EAAhCG,YAAaP,EAAmBI,EAAnBJ,MAAOH,EAAYO,EAAZP,MAChC,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,OAAOC,IAAKb,KAEzBQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAII,QAASP,GAAcV,OCY5BkB,EAnBE,SAAAX,GAA8B,IAA3BR,EAA2BQ,EAA3BR,QAASW,EAAkBH,EAAlBG,YACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEPf,EAAQoB,IAAI,SAACC,EAAQC,GACjB,OACIV,EAAAC,EAAAC,cAACS,EAAD,CACIC,IAAKF,EACLX,YAAaA,EACbV,MAAOoB,EAAOpB,MACdG,MAAOiB,EAAOjB,4BCE3BqB,SAZG,SAAAjB,GAAsB,IAAnBkB,EAAmBlB,EAAnBkB,aACjB,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SACIa,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCEXI,SARG,SAAAtB,GAAwB,IAArBuB,EAAqBvB,EAArBuB,eACjB,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQI,QAASa,GAAjB,qBCyBGC,SA5BO,SAAAxB,GAA0G,IAAvGyB,EAAuGzB,EAAvGyB,OAAQC,EAA+F1B,EAA/F0B,YAAaC,EAAkF3B,EAAlF2B,kBAAmBC,EAA+D5B,EAA/D4B,mBAAoBC,EAA2C7B,EAA3C6B,YAAaC,EAA8B9B,EAA9B8B,aAAcC,EAAgB/B,EAAhB+B,UAC5G,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOe,SAAUK,EAAaP,KAAK,OAAOC,YAAY,+BAE1DhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,YAAU0B,KAAK,IAAIC,KAAK,KAAKZ,SAAUM,EAAmBR,KAAK,OAAOC,YAAY,sCAEtFhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,YAAU0B,KAAK,IAAIC,KAAK,KAAKZ,SAAUO,EAAoBT,KAAK,OAAOC,YAAY,uCAEvFhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAOe,SAAUQ,EAAaV,KAAK,OAAOC,YAAY,qBAE1DhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQI,QAASoB,GAAjB,iBACA1B,EAAAC,EAAAC,cAAA,UAAQI,QAASe,GAAjB,WAEHM,KCEEG,SAzBO,SAAAlC,GAAgC,IAA7BmC,EAA6BnC,EAA7BmC,eAAgBtB,EAAab,EAAba,OACrC,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQI,QAASyB,GAAjB,mBACA/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,WAAMO,EAAOpB,QAEjBW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,OAAOC,IAAKI,EAAOjB,SAEhCQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,WAAMO,EAAOnB,cAEjBU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WAAMO,EAAOlB,mBCrBpByC,EAAa,SAAC3C,EAAOC,EAAaC,EAAcC,GACzD,OAAOyC,MAAM,WAAY,CACrBC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAEC,eAAgB,qBACvCC,KAAMC,KAAKC,UAAU,CAAEnD,QAAOC,cAAaC,eAAcC,YAE5DiD,MAAO,SAAAC,GAAG,OAAIC,QAAQC,OAAO,CAAEC,MAAO,gBAAiBH,UACvDI,KAAM,SAAAC,GACH,OAAGA,EAASC,GACDD,EAASE,OAEbN,QAAQC,OAAO,CAAEC,MAAO,oBAAqBH,IAAKK,EAASG,gBAI7DC,EAAe,WACxB,OAAOlB,MAAM,YACZQ,MAAO,SAAAC,GAAG,OAAIC,QAAQC,OAAO,CAAEC,MAAO,gBAAiBH,UACvDI,KAAM,SAAAC,GACH,OAAGA,EAASC,GACDD,EAASE,OAEbN,QAAQC,OAAO,CAAEC,MAAO,oBAAqBH,IAAKK,EAASG,gBCsM3DE,cAjNb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QA2BFI,mBAAqB,SAACC,GACpBR,EAAKS,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SA7B9BZ,EAgCdlC,eAAiB,WACfkC,EAAKS,SAAS,CACZI,gBAAgB,EAChBC,gBAAgB,KAnCNd,EAuCde,kBAAoB,WAClBf,EAAKS,SAAS,CACZ1E,QAASiF,IAAYjF,QACrB2E,YAAa,GACb1E,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,MAAO,GACP0E,gBAAgB,EAChBI,aAAa,EACbH,gBAAgB,EAChBI,eAAgB,QAlDNlB,EAsDdmB,kBAAoB,SAACX,GACnBR,EAAKS,SAAS,CAAEzE,MAAOwE,EAAMG,OAAOC,SAvDxBZ,EA0DdoB,wBAA0B,SAACZ,GACzBR,EAAKS,SAAS,CAAExE,YAAauE,EAAMG,OAAOC,SA3D9BZ,EA8DdqB,yBAA2B,SAACb,GAC1BR,EAAKS,SAAS,CAAEvE,aAAcsE,EAAMG,OAAOC,SA/D/BZ,EAkEdsB,kBAAoB,SAACd,GACnBR,EAAKS,SAAS,CAAEtE,MAAOqE,EAAMG,OAAOC,SAnExBZ,EAsEduB,mBAAqB,WACnB,IAAMvF,EAAQgE,EAAKwB,MAAMxF,MACnBC,EAAc+D,EAAKwB,MAAMvF,YACzBC,EAAe8D,EAAKwB,MAAMtF,aAC1BC,EAAQ6D,EAAKwB,MAAMrF,MAEZ,KAAVH,GAAgC,KAAhBC,GAAuC,KAAjBC,EACvCyC,EAAW3C,EAAOC,EAAaC,EAAcC,GAC5CsD,KAAK,SAACrC,GACL4C,EAAKS,SAAS,CACZ1E,QAASiF,IAAYjF,QACrB2E,YAAa,GACb1E,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,MAAO,GACP+E,eAAgB9D,EAChByD,gBAAgB,EAChBI,aAAa,EACbH,gBAAgB,EAChBtB,OAAO,MAIXQ,EAAKS,SAAS,CAAEjB,OAAO,KA9FbQ,EA4GdtB,eAAiB,WACfoB,IACCL,KAAK,SAAAlD,GAAiB,IAAdR,EAAcQ,EAAdR,QACPiE,EAAKS,SAAS,CACZ1E,UACA2E,YAAa,GACb1E,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,MAAO,GACP+E,eAAgB,KAChBL,gBAAgB,EAChBI,aAAa,EACbH,gBAAgB,EAChBtB,OAAO,OA1HCQ,EA+HdtD,YAAc,SAAC8D,GACb,IAAMpD,EAAS4C,EAAKwB,MAAMzF,QAAQ0F,KAAK,SAAArE,GACrC,OAAOA,EAAOpB,QAAWwE,EAAMG,OAAOe,YAGxC1B,EAAKS,SAAS,CACZS,eAAgB9D,EAChByD,gBAAgB,EAChBI,aAAa,EACbH,gBAAgB,KAtIlBd,EAAKwB,MAAQ,CACXzF,QAASiF,IAAYjF,QACrB2E,YAAa,GACb1E,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,MAAO,GACP0E,gBAAgB,EAChBI,aAAa,EACbH,gBAAgB,EAChBI,eAAgB,KAChB1B,OAAO,GAGTQ,EAAKO,mBAAqBP,EAAKO,mBAAmBoB,KAAxB1B,OAAA2B,EAAA,EAAA3B,CAAAD,IAC1BA,EAAKlC,eAAiBkC,EAAKlC,eAAe6D,KAApB1B,OAAA2B,EAAA,EAAA3B,CAAAD,IACtBA,EAAKe,kBAAoBf,EAAKe,kBAAkBY,KAAvB1B,OAAA2B,EAAA,EAAA3B,CAAAD,IACzBA,EAAKmB,kBAAoBnB,EAAKmB,kBAAkBQ,KAAvB1B,OAAA2B,EAAA,EAAA3B,CAAAD,IACzBA,EAAKoB,wBAA0BpB,EAAKoB,wBAAwBO,KAA7B1B,OAAA2B,EAAA,EAAA3B,CAAAD,IAC/BA,EAAKqB,yBAA2BrB,EAAKqB,yBAAyBM,KAA9B1B,OAAA2B,EAAA,EAAA3B,CAAAD,IAChCA,EAAKsB,kBAAoBtB,EAAKsB,kBAAkBK,KAAvB1B,OAAA2B,EAAA,EAAA3B,CAAAD,IACzBA,EAAKuB,mBAAqBvB,EAAKuB,mBAAmBI,KAAxB1B,OAAA2B,EAAA,EAAA3B,CAAAD,IAC1BA,EAAKtB,eAAiBsB,EAAKtB,eAAeiD,KAApB1B,OAAA2B,EAAA,EAAA3B,CAAAD,IACtBA,EAAKtD,YAAcsD,EAAKtD,YAAYiF,KAAjB1B,OAAA2B,EAAA,EAAA3B,CAAAD,IAzBPA,yEAkGJ6B,GACR,GAAIA,EACF,OACElF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,qFAuCNsD,KAAK2B,sCAGA,IAAAC,EAAA5B,KACL6B,WAAW,WACND,EAAKP,MAAM9C,gBACZoB,IACCL,KAAK,SAAAwC,GAAiB,IAAdlG,EAAckG,EAAdlG,QACPgG,EAAKtB,SAAS,CACZ1E,UACAC,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,MAAO,GACP+E,eAAgB,KAChBL,gBAAgB,EAChBI,aAAa,EACbH,gBAAgB,EAChBtB,OAAO,MAGVC,KAAK,kBAAMsC,EAAKD,UAElB,sCAGI,IAAAI,EAAA/B,KACP,GAAGA,KAAKqB,MAAMV,eAAgB,CAC1B,IAAMqB,EAAkBhC,KAAKqB,MAAMzF,QAAQqG,OAAO,SAAArG,GAChD,OAAOA,EAAQC,MAAMqG,cAAcC,SAASJ,EAAKV,MAAMd,YAAY2B,iBAGrE,OACE1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0F,EAAD,CAAW9E,aAAc0C,KAAKI,qBAC9B5D,EAAAC,EAAAC,cAAC2F,EAAD,CAAW1E,eAAgBqC,KAAKrC,iBAChCnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4F,EAAD,CAAU1G,QAASoG,EAAiBzF,YAAayD,KAAKzD,gBAIzD,OAAGyD,KAAKqB,MAAMX,eAEjBlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAC6F,EAAD,CACE1E,OAAQmC,KAAKzB,eACbT,YAAakC,KAAKgB,kBAClBjD,kBAAmBiC,KAAKiB,wBACxBjD,mBAAoBgC,KAAKkB,yBACzBjD,YAAa+B,KAAKmB,kBAClBjD,aAAc8B,KAAKoB,mBACnBjD,UAAW6B,KAAKwC,UAAUxC,KAAKqB,MAAMhC,UAIjCW,KAAKqB,MAAMP,YAEjBtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+F,EAAD,CACElE,eAAgByB,KAAKzB,eACrBtB,OAAQ+C,KAAKqB,MAAMN,uBALpB,SArMO2B,aCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjE,KAAK,SAAAkE,GACjCA,EAAaC","file":"static/js/main.a09d2f2d.chunk.js","sourcesContent":["const recipes = [\n    {\n        title: 'Paneer Tikka Masala',\n        ingredients: '1 large onion, roughly chopped, 3-4 medium tomatoes, roughly chopped, 1/2 teaspoon cumin seeds, 1 cinnamon stick, 3-4 garlic cloves, crushed, 1/2 inch ginger, cut into small pieces, 1.5 teaspoon curry powder, 1 tablespoon sugar, 2 tablespoons cream, 2 tablespoon chopped cilantro leaves, and some more to garnish, 1 cup water, 1 tablespoon oil, 1 tablespoon salted butter, salt',\n        instructions: 'Heat 1 tbsp of butter and 1 tbsp of oil in a pan. Once hot add cinnamon stick and cumin seeds. Once the seeds crackle, add the chopped onions, crushed garlic pods and chopped ginger. Fry till onions turn golden brown in color. Once onions are done, add the tomatoes and the curry powder and mix. Also add the the salt and sugar. Cook the tomatoes on medium flame till they are soft, around 6-7 minutes. Once the mixture is cooked, switch off the flame and allow it to cool a bit. Pour the mixture into a blender and puree it. Set aside. Roast the marinated paneer till golden brown in color from both sides. Pour the pureed masala in a wok/kadhai and add water to it. Stir and add cream and chopped coriander leaves. Cover and cook for 4-5 minutes on medium-low flame. Add the roasted paneer pieces, let it simmer for 2-3 minutes. Switch off the flame and garnish with chopped coriander leaves and cream. Serve hot with butter naan or any bread of your choice.',\n        image: 'https://www.thespruceeats.com/thmb/Glh-K9bw9-Px4bCjydHrq8KkkWs=/960x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/paneer-butter-masala-or-cheese-cottage-curry--popular-indian-lunch-dinner-menu-in-weddings-or-parties--selective-focus-669329084-5acac5acc67335003764a3bc.jpg',\n    },\n    {\n        title: 'Chana Masala',\n        ingredients: '1 tablespoon olive oil, 1 large onion, chopped 2 to 3 garlic cloves, Two 15- to 16-ounce cans chickpeas, 1 to 2 teaspoons garam masala or good-quality curry powder, 1/2 teaspoon turmeric, 2 teaspoons grated fresh or jarred ginger, 2 large tomatoes, 1 tablespoon lemon juice, 1/4 cup minced fresh cilantro, Salt',\n        instructions: ' Heat the oil in a wide skillet. Add the onion and sautÈ until translucent. Add the garlic and continue to sautÈ until the onion is golden. Add the chickpeas, garam masala, turmeric, ginger, tomatoes, lemon juice, and about 1/4 cup water. Bring to a simmer, then cook over medium-low heat for 10 minutes, stirring frequently. This should be moist and stewlike, but not soupy; add a little more water, if needed. Stir in the cilantro and season with salt. Serve on its own in shallow bowls or over a hot cooked grain, if desired.',\n        image: 'https://www.seriouseats.com/recipes/images/2016/03/20160328-channa-masala-recipe-6-1500x1125.jpg',\n    },\n    {\n        title: 'Chicken Fried Rice',\n        ingredients: '2 tbsp. extra-virgin olive oil, 3 chicken breasts, Kosher salt, Freshly ground black pepper, 2 tbsp. sesame oil, 1 medium onion, 2 carrots, 3 cloves garlic, 1 tbsp. freshly minced ginger, 4 cups cooked white rice, 3/4 cup frozen peas, 3 large eggs, 3 tbsp. low-sodium soy sauce, 2 green onions',\n        instructions: 'In a medium skillet over medium heat, heat olive oil. Season chicken with salt and pepper on both sides, then add to skillet, and cook until golden and no longer pink, 8 minutes per side. Remove from skillet and let rest 5 minutes, then cut into bite-sized pieces. To the same skillet, heat 1 tablespoon sesame oil. Add onion and carrots and cook until soft, 5 minutes, Add garlic and ginger and cook until fragrant, 1 minute more. Stir in rice and peas and cook until warmed through, 2 minutes. Push rice to one side of skillet and add remaining tablespoon sesame oil to other side. Add egg and stir until almost fully cooked, then fold eggs into rice. Add chicken back to skillet with soy sauce and green onions and stir to combine.',\n        image: 'https://food.fnr.sndimg.com/content/dam/images/food/fullset/2018/3/29/0/RX-Kraft_Chicken-Fried-Rice-Sticks_s4x3.jpg.rend.hgtvcom.826.620.suffix/1522358458773.jpeg',\n    },\n    {\n        title: 'Tamarind Rice',\n        ingredients: 'Ω teaspoon Chana dal, Ω teaspoon Urad dal, 1/8 teaspoon Mustard seeds, Ω teaspoon Cumin seeds, º teaspoon Black peppercorns, Ω teaspoon Fennel seeds, 5-6 Curry leaves, 2 Dried red chilies, 2 teaspoon Tamarind paste or small lemon size tamarind ball, 1 cup Water (Boiling hot), 3 cups Cooked rice, 1 tablespoon Oil, º teaspoon Mustard seeds, 1 Dried red chilies, 4-5 Curry leaves, 2 tablespoons Peanuts, º teaspoon Turmeric powder, Salt, 1 teaspoon Jaggery, 1 tablespoon Sesame seeds',\n        instructions: 'First, cook the rice and let it cool. Dry roast the sesame seeds on medium heat till it get light brown. They will start to pop and you will get nice aroma of toasted seeds. Remove it to the plate and let it cool completely. Once cooled grind it coarsely and keep it aside. If using tamarind paste then dissolve it into 1 cup of hot water. Take all the spices into a pan and turn the heat on medium. Dry roast them with stirring constantly till they get light brown color. Remove it to another plate and let it cool completely. Heat the oil in a pan on medium heat. Once hot add mustard seeds. Let them pop. Then add dry red chili and curry leaves. Saute for a minute. Add peanuts. and roast it till it gets light brown. Then add tamarind water. Add freshly ground spice powder, turmeric powder, jaggery and salt. Mix and let it simmer. Cook till it thicken and become a paste like consistency. Then add cooked rice. Mix gently till all the masala paste it coated to the rice evenly. Cook for 2 minutes and turn off the stove. Lastly garnish with sesame powder.',\n        image: 'http://www.ndtv.com/cooks/images/tamarind.000.rice.jpg',\n    },\n    {\n        title: 'Tomato Pickle',\n        ingredients: '500 gm chopped,washed & dried tomato, 2 tablespoon powdered red chilli, 1 teaspoon powdered mustard powder, 1 teaspoon powdered fenugreek seeds, 1 tablespoon powdered sea salt, 150 ml sesame oil, 1 teaspoon powdered asafoetida, 3/4 cup Tamarind Extract',\n        instructions: 'Step 1: For making this spicy side dish recipe, start with heating mustard oil in a pan. Step 2: Add asafoetida powder and stir for 10 seconds. Step 3: Then, add the chopped tomatoes and saute well. Step 4: Add tamarind extract, salt, red chilli powder and cook till water has almost evaporated and tomatoes have changed colour. Step 5: When the oil starts to float, add mustard powder, vendhaya powder and mix well. Step 6: Transfer to a clean jar and cover with a lid. Use as required.',\n        image: 'https://vaya.in/recipes/wp-content/uploads/2018/03/Tomato-Pickle.jpg',\n    },\n    {\n        title: 'Spinach Dal',\n        ingredients: '1/2 cup toor dal/arhar dal, 1/4 cup moong dal dhuli, 2.5 cups water, 1/2 teaspoon salt, 1/4 teaspoon turmeric powder, 2 teaspoons vegetable oil, 1/2 teaspoon mustard seeds, 1/4 teaspoon cumin seeds, 2 large garlic cloves, 1 large tomato, 1 green chili, 1.25 cups finely chopped spinach, 1/4 cup water, 1/4 teaspoon garam masala powder, salt, 1-2 teaspoon lemon juice',\n        instructions: \"To a pressure cooker add the washed lentils, add 2.5 cups water, 1/2 teaspoon salt and 1/4 teaspoon turmeric powder. Cook at high flame for 2 whistles, then lower the flame and cook for another 7-8 minutes or till lentils are completely cooked. Let the pressure of the cooker come off on it's own. Set aside. In case you don't have a pressure cooker, cook the lentils in a pan till completely cooked. Heat oil in a pan on medium heat. Once the oil is hot, add cumin seeds and mustard seeds. Wait till cumin seeds crackle and mustard seeds start popping out. Once the seeds start crackling, add chopped garlic and green chili. Saute for a minute or till garlic just starts turning golden brown in color. Add chopped tomatoes, salt and cook for 2 minutes. We don't want to overcook the tomatoes here. Add chopped spinach and mix. Cook for 2-3 minutes or till there's no raw smell of tomatoes or spinach. Add the cooked dal to the pan and let it all come to a boil. Lower the heat, add more water if needed (I did add 1/4 water here) and let the dal simmer for 5 minutes. Check the salt and adjust to taste. Sprinkle garam on top and remove pan from heat. Squeeze in some fresh lemon juice and serve spinach dal with any bread or steamed rice!\",\n        image: 'https://162790-470681-raikfcquaxqncofqfm.stackpathdns.com/wp-content/uploads/2017/08/Lentils-with-spinach-Instant-Pot.-Pressure-Cooker-Dal-Palak.jpg',\n    },\n    {\n        title: 'Samosa',\n        ingredients: '3/4 teaspoon salt, 2 1/4 cups self-rising flour, 6 tablespoons (3/4 stick) butter, 9 tablespoons water, 1 1/2 pounds potatoes, 1 cup fresh vegetables (corn, carrots and peas), 2 tablespoons vegetable oil, 1 medium onion, 1 teaspoon finely chopped garlic, 1 1/2 teaspoons finely chopped fresh ginger, 1/2 habenero chile, 1/2 teaspoon garam masala spice blend, 1/2 teaspoon turmeric, 1 teaspoon red chile powder, 1 1/2 teaspoons salt, 1/2 lemon, 2 tablespoons chopped fresh coriander leaves, Vegetable oil',\n        instructions: 'Mix the salt and flour in a medium bowl or a food processor. With a pastry blender, incorporate the butter until crumbs have formed. Add the water a few tablespoons at a time, until you can form a ball. Knead the dough for about 5 minutes. Let it rest for about 15 minutes more. You can prepare the dough in advance and refrigerate it. Boil the potatoes until tender. Drain and set aside. If using fresh carrots, chop and simmer in water, to cover, in a small pot. Add the corn and peas to barely cook. Set aside to cool. Heat the oil in a pan and fry the onion until golden. Add the garlic, ginger, and chile and cook for 2 minutes. Add the garam masala, turmeric, chile powder, and salt and cook 2 minutes more. In a bowl combine the mashed potatoes, the onion and spice mixture, carrots, peas, corn, lemon juice, and chopped coriander. Mix well. Divide the dough into 9 equal size balls. On a floured surface, roll each ball into a 5-inch circle. Cut each circle in half. Brush the straightedge side with a little water, fold it in half, and align the two straight sides so they overlap to form a cone shape. Squeeze the edges together to make a tight seal. Place approximately 1 generous tablespoon of filling inside each cone, leaving the top edge clean. Moisten the inside top rim of the cone and press the edges together to make another tight seal. Place the samosas on a tray until ready to fry. Repeat with the remaining dough and filling. Heat approximately 3 inches of vegetable oil in a deep saucepan. Fry several samosas at a time, being careful not to crowd them. When 1 side turns golden brown, flip it over to brown on the other side. Drain on paper towels. Serve with chutney.',\n        image: 'https://fabfoodies.in/wp-content/uploads/2019/01/Potato-Samosa.jpg',\n    },\n];\n\nfunction addRecipe({ title, ingredients, instructions, image }) {\n    recipes.push({ title, ingredients, instructions, image });\n}\n\nmodule.exports = {recipes, addRecipe};","import React from 'react';\nimport './css/Card.css';\n\nconst Card = ({ showDetails, image, title }) => {\n    return (\n        <div className=\"recipe\">\n            <div className=\"image\">\n                <img alt='food' src={image}/>\n            </div>\n            <div>\n                <h2 onClick={showDetails}>{title}</h2>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ recipes, showDetails }) => {\n    return(\n        <div className=\"recipes\">\n            {\n                recipes.map((recipe, i) => {\n                    return(\n                        <Card\n                            key={i}\n                            showDetails={showDetails}\n                            title={recipe.title}\n                            image={recipe.image}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default CardList;","import React from 'react';\nimport './css/SearchBox.css';\n\nconst SearchBox = ({ searchChange }) => {\n    return(\n        <div className=\"searchBox\">\n            <input\n                type='search'\n                placeholder='search recipes'\n                onChange={searchChange}\n            />\n        </div>\n    );\n};\n\nexport default SearchBox;","import React from 'react';\nimport './css/AddRecipe.css';\n\nconst AddRecipe = ({ openRecipeForm }) => {\n    return(\n        <div className=\"addRecipe\">\n            <button onClick={openRecipeForm}>Add New Recipe</button>\n        </div>\n    );\n};\n\nexport default AddRecipe;","import React from 'react';\nimport './css/NewRecipeForm.css';\n\nconst NewRecipeForm = ({ cancel, titleChange, ingredientsChange, instructionsChange, imageChange, submitRecipe, showerror }) => {\n    return(\n        <div className=\"newRecipeForm\">\n            <div className=\"recipe-title\">\n                <label>Recipe title:</label>\n                <input onChange={titleChange} type=\"text\" placeholder=\"Enter title of the recipe\"/>\n            </div>\n            <div className=\"recipe-ingredients\">\n                <label>Enter ingredients for the recipe:</label>\n                <textarea rows=\"5\" cols=\"50\" onChange={ingredientsChange} type=\"text\" placeholder=\"Enter ingredients for the recipe\"></textarea>\n            </div>\n            <div className=\"recipe-instructions\">\n                <label>Enter instructions for the recipe:</label>\n                <textarea rows=\"5\" cols=\"50\" onChange={instructionsChange} type=\"text\" placeholder=\"Enter instructions for the recipe\"></textarea>\n            </div>\n            <div className=\"recipe-image\">\n                <label>Add Image url:</label>\n                <input onChange={imageChange} type='text' placeholder=\"Enter image url\"/>\n            </div>\n            <div className=\"button-area\">\n                <button onClick={submitRecipe} >Submit Recipe</button>\n                <button onClick={cancel} >Cancel</button>\n            </div>\n            {showerror}\n        </div>\n    );\n};\n\nexport default NewRecipeForm;","import React from 'react';\nimport './css/RecipeDetails.css';\n\nconst RecipeDetalis = ({ showAllRecipes, recipe }) => {\n    return(\n        <div>\n            <button onClick={showAllRecipes}>See all recipes</button>\n            <div className=\"recipeDetails\">\n                <div className=\"title\">\n                    <label>Title:</label>\n                    <div>{recipe.title}</div>\n                </div>\n                <div className=\"images\">\n                    <img alt='food' src={recipe.image}/>\n                </div>\n                <div className=\"ingredients\">\n                    <label>Ingredients:</label>\n                    <div>{recipe.ingredients}</div>\n                </div>\n                <div className=\"instructions\">\n                    <label>Instructions:</label>\n                    <div>{recipe.instructions}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RecipeDetalis;","export const postRecipe = (title, ingredients, instructions, image) => {\n    return fetch('/recipes', {\n        method: 'POST',\n        headers: new Headers({ 'content-type': 'application/json' }),\n        body: JSON.stringify({ title, ingredients, instructions, image })\n    })\n    .catch( err => Promise.reject({ error: 'service-error', err }) )\n    .then( response => {\n        if(response.ok) {\n            return response.json();\n        }\n        return Promise.reject({ error: 'service-complaint', err: response.statusText });\n    });\n}\n\nexport const fetchRecipes = () => {\n    return fetch('/recipes')\n    .catch( err => Promise.reject({ error: 'service-error', err }) )\n    .then( response => {\n        if(response.ok) {\n            return response.json();\n        }\n        return Promise.reject({ error: 'service-complaint', err: response.statusText });\n    });\n}","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from './CardList';\nimport recipeStore from './recipes';\nimport SearchBox from './SearchBox';\nimport AddRecipe from './AddRecipe';\nimport NewRecipeForm from './NewRecipeForm';\nimport RecipeDetails from './RecipeDetails';\nimport { postRecipe, fetchRecipes } from './services';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      recipes: recipeStore.recipes,\n      searchfield: '',\n      title: '',\n      ingredients: '',\n      instructions: '',\n      image: '',\n      recipeFormPage: false,\n      detailsPage: false,\n      allRecipesPage: true,\n      selectedRecipe: null,\n      error: false,\n    }\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.openRecipeForm = this.openRecipeForm.bind(this);\n    this.handleCancelClick = this.handleCancelClick.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleIngredientsChange = this.handleIngredientsChange.bind(this);\n    this.handleInstructionsChange = this.handleInstructionsChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.handleSubmitRecipe = this.handleSubmitRecipe.bind(this);\n    this.showAllRecipes = this.showAllRecipes.bind(this);\n    this.showDetails = this.showDetails.bind(this);\n  }\n\n  handleSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  }\n\n  openRecipeForm = () => {\n    this.setState({ \n      recipeFormPage: true,\n      allRecipesPage: false,\n     });\n  }\n\n  handleCancelClick = () => {\n    this.setState({ \n      recipes: recipeStore.recipes,\n      searchfield: '',\n      title: '',\n      ingredients: '',\n      instructions: '',\n      image: '',\n      recipeFormPage: false,\n      detailsPage: false,\n      allRecipesPage: true,\n      selectedRecipe: null,\n     });\n  }\n\n  handleTitleChange = (event) => {\n    this.setState({ title: event.target.value })\n  }\n\n  handleIngredientsChange = (event) => {\n    this.setState({ ingredients: event.target.value })\n  }\n\n  handleInstructionsChange = (event) => {\n    this.setState({ instructions: event.target.value })\n  }\n\n  handleImageChange = (event) => {\n    this.setState({ image: event.target.value })\n  }\n\n  handleSubmitRecipe = () => {\n    const title = this.state.title;\n    const ingredients = this.state.ingredients;\n    const instructions = this.state.instructions;\n    const image = this.state.image;\n\n    if(title !== '' && ingredients !== '' && instructions !== '') {\n      postRecipe(title, ingredients, instructions, image)\n      .then((recipe) => {\n        this.setState({\n          recipes: recipeStore.recipes,\n          searchfield: '',\n          title: '',\n          ingredients: '',\n          instructions: '',\n          image: '',\n          selectedRecipe: recipe,\n          recipeFormPage: false,\n          detailsPage: true,\n          allRecipesPage: false,\n          error: false,\n        });\n      });\n    } else {\n      this.setState({ error: true});\n    }\n  }\n\n  showError(errorFlag) {\n    if (errorFlag) {\n      return (\n        <div className=\"error\">\n          <div>*All Fields Are Mandatory</div>\n        </div>\n      )\n    }\n  }\n\n  showAllRecipes = () => {\n    fetchRecipes()\n    .then(({ recipes }) => {\n      this.setState({ \n        recipes,\n        searchfield: '',\n        title: '',\n        ingredients: '',\n        instructions: '',\n        image: '',\n        selectedRecipe: null,\n        recipeFormPage: false,\n        detailsPage: false,\n        allRecipesPage: true,\n        error: false\n       });\n    });    \n  }\n\n  showDetails = (event) => {\n    const recipe = this.state.recipes.find(recipe => {\n      return recipe.title === (event.target.innerHTML);\n    })\n\n    this.setState({\n      selectedRecipe: recipe,\n      recipeFormPage: false,\n      detailsPage: true,\n      allRecipesPage: false,\n    });\n  }\n\n  componentDidMount() {\n    this.poll();\n  }\n\n  poll() {\n    setTimeout(() => {\n      if(this.state.showAllRecipes) {\n        fetchRecipes()\n        .then(({ recipes }) => {\n          this.setState({ \n            recipes,\n            title: '',\n            ingredients: '',\n            instructions: '',\n            image: '',\n            selectedRecipe: null,\n            recipeFormPage: false,\n            detailsPage: false,\n            allRecipesPage: true,\n            error: false\n          });\n        })\n        .then(() => this.poll());\n      }\n    }, 5000)\n  }\n\n  render() {\n    if(this.state.allRecipesPage) {\n        const filteredRecipes = this.state.recipes.filter(recipes => {\n          return recipes.title.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n\n        return (\n          <div className=\"App\">\n            <SearchBox searchChange={this.handleSearchChange} />\n            <AddRecipe openRecipeForm={this.openRecipeForm}/>\n            <div>\n              <CardList recipes={filteredRecipes} showDetails={this.showDetails}/>\n            </div>\n          </div>\n        );\n    } else if(this.state.recipeFormPage){\n      return (\n        <div className=\"App\">\n        <NewRecipeForm \n          cancel={this.showAllRecipes}\n          titleChange={this.handleTitleChange}\n          ingredientsChange={this.handleIngredientsChange}\n          instructionsChange={this.handleInstructionsChange}\n          imageChange={this.handleImageChange}\n          submitRecipe={this.handleSubmitRecipe}\n          showerror={this.showError(this.state.error)}\n        />\n      </div>\n      );\n    } else if(this.state.detailsPage) {\n      return (\n        <div className=\"App\">\n          <RecipeDetails \n            showAllRecipes={this.showAllRecipes}\n            recipe={this.state.selectedRecipe}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}